(define (square num) (* num num))

(define (large_num a b c)
  (or (and (>= a b) (>= a c) a)
      (and (>= b a) (>= b c) b)
      (and (>= c a) (>= c b) c)
  ))

(define (large_num_2 a b)
  (cond ((>= a b) a)
        ((>= b a) b)
  ))

(define (2nd_num a b c)
  (cond ((= (- (large_num a b c) a) 0)
           (large_num_2 b c)
        )

        ((= (- (large_num a b c) b) 0)
           (large_num_2 a c)
        )

        ((= (- (large_num a b c) c) 0)
           (large_num_2 a b)
        )
  ))
  
(define (sum_square_two_larger x y z)
  (+ (square (large_num x y z)) (square (2nd_num x y z)))
  )
  

(sum_square_two_larger 100 100 0)
;;(2nd_num 100 10 4)
;;(small_num 5 5 0)
;;(> 5 6 7)
;;(2nd_num 7)
;;(large_num 5 5 7)
;;(define sum_two_large_num x y z )
